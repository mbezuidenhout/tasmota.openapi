{
  "openapi": "3.0.3",
  "info": {
    "title": "Tasmota Device Manager API",
    "description": "Device manager for Tasmota devices via MQTT [Source](https://github.com/mbezuidenhout/tasmota.mqtt.device.manager).",
    "version": "0.1.0",
    "contact": {
      "email": "marius.bezuidenhout@gmail.com"
    }
  },
  "servers": [
    {
      "url": "https://localhost:43443/v3",
      "description": "Optional server description, e.g. Main (production) server"
    },
    {
      "url": "http://staging-api.example.com",
      "description": "Optional server description, e.g. Internal staging server for testing"
    }
  ],
  "tags": [
    {
      "name": "Session",
      "description": "MQTT and session management"
    },
    {
      "name": "Device",
      "description": "Request and update device details",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://tasmota.github.io"
      }
    }
  ],
  "paths": {
    "/mqtt/connect": {
      "post": {
        "security": [],
        "tags": [
          "Session"
        ],
        "summary": "Sets the MQTT host options",
        "responses": {
          "200": {
            "description": "Successful connection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "503": {
            "description": "Connection refused"
          }
        },
        "requestBody": {
          "description": "MQTT host in the format tcp://host:port with username and password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MQTTOptions"
              }
            },
            "examples": {}
          }
        }
      }
    },
    "/mqtt": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "Session"
        ],
        "summary": "Get MQTT session status",
        "responses": {
          "200": {
            "description": "MQTT session is connected"
          },
          "401": {
            "description": "Session is not connected"
          }
        }
      }
    },
    "/mqtt/disconnect": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "Session"
        ],
        "summary": "Disconnect from MQTT server",
        "responses": {
          "200": {
            "description": "Disconnected"
          }
        }
      }
    },
    "/devices": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "Device"
        ],
        "summary": "Returns a list of tasmota devices.",
        "responses": {
          "200": {
            "description": "A JSON array of devices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Device"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/device/{deviceTopic}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "Device"
        ],
        "summary": "Returns details of tasmota device by topic.",
        "parameters": [
          {
            "in": "path",
            "name": "deviceTopic",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object of requested device.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      }
    },
    "schemas": {
      "MQTTOptions": {
        "type": "object",
        "properties": {
          "Host": {
            "type": "string"
          },
          "Username": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          },
          "CustomTopic": {
            "type": "string"
          }
        },
        "required": [
          "Host",
          "Username",
          "Password"
        ]
      },
      "Session": {
        "properties": {
          "apikey": {
            "type": "string"
          }
        }
      },
      "Device": {
        "type": "object",
        "properties": {
          "Topic": {
            "type": "string",
            "description": "Unique device topic"
          },
          "FullTopic": {
            "type": "string",
            "description": "Full topic format"
          },
          "Online": {
            "type": "boolean",
            "description": "Device status"
          },
          "LoadAvg": {
            "type": "integer",
            "description": "Load Average"
          },
          "Timezone": {
            "type": "string",
            "description": "Timezone offset from GMT",
            "pattern": "(\\+|\\-)\\d{2}:\\d{2}"
          },
          "StatusNET": {
            "$ref": "#/components/schemas/Network"
          },
          "StatusFWR": {
            "$ref": "#/components/schemas/Firmware"
          }
        },
        "required": [
          "Topic",
          "FullTopic",
          "Online"
        ]
      },
      "Firmware": {
        "type": "object",
        "properties": {
          "Version": {
            "type": "string"
          },
          "BuildDateTime": {
            "type": "string",
            "pattern": "\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}"
          },
          "Boot": {
            "type": "integer"
          },
          "Hardware": {
            "type": "string"
          }
        }
      },
      "Network": {
        "type": "object",
        "properties": {
          "IPAddress": {
            "type": "string",
            "pattern": "((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))"
          },
          "Hostname": {
            "type": "string",
            "pattern": "([a-zA-Z0-9\\-\\.])+"
          },
          "Gateway": {
            "type": "string",
            "pattern": "((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))"
          },
          "Subnetmask": {
            "type": "string",
            "pattern": "((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))"
          },
          "DNSServer1": {
            "type": "string",
            "pattern": "((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))"
          },
          "DNSServer2": {
            "type": "string",
            "pattern": "((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))"
          },
          "Mac": {
            "type": "string",
            "pattern": "([0-9A-F]{2}[:-]){5}([0-9A-F]{2})"
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "API key is missing or invalid",
        "headers": {
          "WWW_Authenticate": {
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}